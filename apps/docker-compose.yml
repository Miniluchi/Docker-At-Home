# Applications Stack
# Services: N8N (automation), Planka (kanban), Snapdrop (file sharing)

services:
  # N8N - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
      - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
      - GENERIC_TIMEZONE=${TZ}
      - N8N_HOST=n8n.${DOMAIN_BASE}
      - N8N_PORT=5678
      - WEBHOOK_URL=https://n8n.${DOMAIN_BASE}/
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN_BASE}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsEncrypt"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.docker.network=traefik_net"
    restart: unless-stopped

  # Snapdrop - Partage de fichiers local
  snapdrop:
    image: linuxserver/snapdrop:version-f88d46ed
    container_name: snapdrop
    restart: unless-stopped
    networks:
      - traefik_net
    environment:
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.snapdrop.rule=Host(`snapdrop.${DOMAIN_BASE}`)"
      - "traefik.http.routers.snapdrop.entrypoints=websecure"
      - "traefik.http.routers.snapdrop.tls=true"
      - "traefik.http.routers.snapdrop.tls.certresolver=letsEncrypt"
      - "traefik.http.services.snapdrop.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_net"

  # Planka - Kanban Board
  planka:
    image: ghcr.io/plankanban/planka:latest
    container_name: planka
    restart: unless-stopped
    networks:
      - traefik_net
    environment:
      - TRUST_PROXY=1
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/planka
      - SECRET_KEY=${PLANKA_SECRET_KEY}
      - BASE_URL=https://planka.${DOMAIN_BASE}
      - TZ=${TZ}
    volumes:
      - planka_user_avatars:/app/public/user-avatars
      - planka_project_bg:/app/public/background-images
      - planka_attachments:/app/public/attachments
      - planka_data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.planka.rule=Host(`planka.${DOMAIN_BASE}`)"
      - "traefik.http.routers.planka.entrypoints=websecure"
      - "traefik.http.routers.planka.tls=true"
      - "traefik.http.routers.planka.tls.certresolver=letsEncrypt"
      - "traefik.http.services.planka.loadbalancer.server.port=1337"
      - "traefik.docker.network=traefik_net"

networks:
  traefik_net:
    name: traefik_net
    external: true

volumes:
  n8n_data:
  planka_user_avatars:
  planka_project_bg:
  planka_attachments:
  planka_data:
